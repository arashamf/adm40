#include "defs.h"

/*
+CARDREADER_POWER PE2
+VALIDATOR_POWER PE3
+PC_POWER PE4
+PRINTER_POWER PE5
?+I/O 2 PC14
?+I/O 1 PC15
+RFID_1WIRE PF0
?+Validator_On PF1
?+Status_LED PF2
+MONITOR_BUTTON PF3

+POWER_BUTTON PC0
+DC_6 PC1
+DC_5 PC2
+DC_4 PC3
+DC_3 PA2

+UART4 TX PA0
+UART4 RX PA1

#############################
+DC2 PA3
+DC1 PA4
+Check_CoM_Port PA5
+BAT_EN PA6
+тестить MEAG_VBAT PA7  adc12 in7 аналоговый вход - напряжение батареи
+тестить CHRG_VIN  PC4  adc12 in4 аналоговый вход - напряжение источника 12В
+CHRG_EN PC5 
?+BUTTON2 PF11 кнопка на плате Нужна ли для АДМ100?
?+BUTTON1 PF12 кнопка на плате Нужна ли для АДМ100?

+LED8 PF13
+LED7 PF14
+LED6 PF15
+LED5 PG0
+LED4 PG1
+LED3 PE7
+LED2 PE8
+LED1 PE9
+LED9 PE10
+LED10 PE11
+LED11 PE12
+LED12 PE13
+LED13 PE14
+LED14 PE15
+LED15 PB10
+LED16 PB11

#############################
LCD CS PB12
LCD RESET PB13
LCD A0 PB14
LCD SDA PB15
LCD SCK PD10

USB PSO PC6      Используется только в bootloadere
USB OC  PC7      Используется только в bootloadere
SDIO D0 PC8
SDIO D1 PC9
USB FS1 VBUS PA8 Используется только в bootloadere
+UART1 TX PA9
+UART1 RX PA10
#############################
SDIO D2 PC10
SDIO D3 PC11
SDIO CLK PC12
+SDIO PSO PD0
+SDIO OC  PD1
SDIO CMD PD2
?+LED ERROR PB3
?+LED OK PB4
+SPKR PB5
+RTC SCL PB6
+RTC SDA PB7
?+LED HOPPER PB8
?+LED PRINTER PB9
?+RESERVE POWER PE0
+LOCK POWER PE1

#############################
*/

//+Кнопка PowerOn
#define BUT_POWER_PORT GPIOC
#define BUT_POWER_PIN GPIO_PIN_0
#define BUT_POWER HAL_GPIO_ReadPin(BUT_POWER_PORT,BUT_POWER_PIN)

//+Питание термопринтера
#define PRINTER_POWER_PORT GPIOE
#define PRINTER_POWER_PIN GPIO_PIN_5
#define PRINTER_POWER_PSO(x) ((x)? (HAL_GPIO_WritePin(PRINTER_POWER_PORT,PRINTER_POWER_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(PRINTER_POWER_PORT,PRINTER_POWER_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define PRINTER_POWER(x) PRINTER_POWER_PSO(x)
#else
 #define PRINTER_POWER(x) PRINTER_POWER_PSO(x); LED9(x)
#endif

//+Разрешение заряда
#define CHARGE_ENABLE_PORT GPIOC
#define CHARGE_ENABLE_PIN GPIO_PIN_5
#define CHARGE_ENABL(x) ((x)? (HAL_GPIO_WritePin(CHARGE_ENABLE_PORT,CHARGE_ENABLE_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(CHARGE_ENABLE_PORT,CHARGE_ENABLE_PIN,GPIO_PIN_RESET)));

#if SHOW_LEDS == 0
 #define CHARGE_ENABLE(x) CHARGE_ENABL(x)
#else
 #define CHARGE_ENABLE(x) CHARGE_ENABL(x); LED_CHARGE(x)
#endif

//+Разрешение батарейного питания
//На инициализации - OK
#define BAT_ENABLE_PORT GPIOA
#define BAT_ENABLE_PIN GPIO_PIN_6
#define BAT_COMP HAL_GPIO_ReadPin(BAT_ENABLE_PORT,BAT_ENABLE_PIN)
#define BAT_ENABL(x) ((x == 0)? (HAL_GPIO_WritePin(BAT_ENABLE_PORT,BAT_ENABLE_PIN,GPIO_PIN_RESET)) : (HAL_GPIO_WritePin(BAT_ENABLE_PORT,BAT_ENABLE_PIN,GPIO_PIN_SET)));

//!Индикация !!!
#define BAT_ENABLE(x) BAT_ENABL(x)

//+Порт 1-wire
#define ONE_WIRE_PORT GPIOF
#define ONE_WIRE_PIN  GPIO_PIN_0
#define ONE_WIRE(x) ((x)? (HAL_GPIO_WritePin(ONE_WIRE_PORT,ONE_WIRE_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(ONE_WIRE_PORT,ONE_WIRE_PIN,GPIO_PIN_RESET)));
#define ONE_WIRE_READ HAL_GPIO_ReadPin(ONE_WIRE_PORT,ONE_WIRE_PIN)

//+Порты soft I2C для RTC
#define I2C_SDA_PORT GPIOB
#define I2C_SCL_PORT GPIOB
#define I2C_SDA_PIN GPIO_PIN_7
#define I2C_SCL_PIN GPIO_PIN_6

#define SDA1 HAL_GPIO_WritePin(GPIOB,I2C_SDA_PIN,GPIO_PIN_SET);
#define SDA0 HAL_GPIO_WritePin(GPIOB,I2C_SDA_PIN,GPIO_PIN_RESET);
#define SCL1 HAL_GPIO_WritePin(GPIOB,I2C_SCL_PIN,GPIO_PIN_SET);
#define SCL0 HAL_GPIO_WritePin(GPIOB,I2C_SCL_PIN,GPIO_PIN_RESET);
#define SDAin  HAL_GPIO_ReadPin(I2C_SDA_PORT,I2C_SDA_PIN)

//Reset RTC
//!!!!!!!Этот пин не подключен сейчас!!!!!!!
//-Этот порт указан временно из свободных PA15
#define RESET1_I2C_PORT GPIOA
#define RESET_I2C_PIN GPIO_PIN_15
#define RESET1_I2C HAL_GPIO_WritePin(RESET1_I2C_PORT,RESET_I2C_PIN,GPIO_PIN_SET);
#define RESET0_I2C HAL_GPIO_WritePin(RESET1_I2C_PORT,RESET_I2C_PIN,GPIO_PIN_RESET);

//!!!!!!!SDIO CD
//!!!!!!!Этот пин не подключен сейчас!!!!!!!
//-Этот порт указан временно из свободных PG14
#define SDIO_POWER_PORT GPIOG
#define SDIO_POWER_PIN  GPIO_PIN_14
//***********************************************

//Подсветка дисплея
//#define VLED_EN_PORT GPIOE
//#define VLED_EN_PIN GPIO_PIN_2
//#define VLED_EN(x) ((x)? (HAL_GPIO_WritePin(VLED_EN_PORT,VLED_EN_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(VLED_EN_PORT,VLED_EN_PIN,GPIO_PIN_RESET)));

//Включение дисплея
//#define DISP_PORT GPIOE
//#define DISP_PIN GPIO_PIN_3
//#define DISP_EN(x) ((x)? (HAL_GPIO_WritePin(DISP_PORT,DISP_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(DISP_PORT,DISP_PIN,GPIO_PIN_RESET)));

//+Пищалка
#define SPKR_PORT GPIOB
#define SPKR_PIN GPIO_PIN_5
#define SPKR(x) ((x)? (HAL_GPIO_WritePin(SPKR_PORT,SPKR_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(SPKR_PORT,SPKR_PIN,GPIO_PIN_RESET)));

//+Питание RFID ридера
#define OTHER_PSO1_PORT GPIOH
#define OTHER_PSO1_PIN GPIO_PIN_6
#define OUTPUT_1(x) ((x)? (HAL_GPIO_WritePin(OTHER_PSO1_PORT,OTHER_PSO1_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(OTHER_PSO1_PORT,OTHER_PSO1_PIN,GPIO_PIN_RESET)));
#define RFID_READER(x) OUTPUT_1(x)

//+Питание компьютера
#define OTHER_PSO2_PORT GPIOE
#define OTHER_PSO2_PIN GPIO_PIN_4
#define OUTPUT_2(x) ((x)? (HAL_GPIO_WritePin(OTHER_PSO2_PORT,OTHER_PSO2_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(OTHER_PSO2_PORT,OTHER_PSO2_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define COMPUTER_POWER(x) OUTPUT_2(x) 
#else
 #define COMPUTER_POWER(x) OUTPUT_2(x); LED10(x); LED11(x) 
#endif

//+Питание валидатора
#define OTHER_PSO3_PORT GPIOE
#define OTHER_PSO3_PIN GPIO_PIN_3
#define OUTPUT_3(x) ((x)? (HAL_GPIO_WritePin(OTHER_PSO3_PORT,OTHER_PSO3_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(OTHER_PSO3_PORT,OTHER_PSO3_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define VALIDATOR(x) OUTPUT_3(x)
#else
 #define VALIDATOR(x) OUTPUT_3(x); LED12(x)
#endif

//+Питание монитора в компьютерной версии 
#define MON_POWER_PORT GPIOC
#define MON_POWER_PIN GPIO_PIN_4
#define MON_POWER_PSO(x) ((x)? (HAL_GPIO_WritePin(MON_POWER_PORT,MON_POWER_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(MON_POWER_PORT,MON_POWER_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define MON_POWER(x) MON_POWER_PSO(x)
#else
 #define MON_POWER(x) MON_POWER_PSO(x); LED11(x)
#endif

//+Питание кардридера
#define CARD_READER_PORT GPIOE
#define CARD_READER_PIN GPIO_PIN_2
#define CARD_READER_PSO(x) ((x)? (HAL_GPIO_WritePin(CARD_READER_PORT,CARD_READER_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(CARD_READER_PORT,CARD_READER_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define CARD_READER_POWER(x) CARD_READER_PSO(x)
#else
 #define CARD_READER_POWER(x) CARD_READER_PSO(x); LED13(x); LED14(x);
#endif

//+Питание замка
#define LOCK_PSO_PORT GPIOE
#define LOCK_PSO_PIN GPIO_PIN_1
#define LOCK_PSO(x) ((x)? (HAL_GPIO_WritePin(LOCK_PSO_PORT,LOCK_PSO_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LOCK_PSO_PORT,LOCK_PSO_PIN,GPIO_PIN_RESET)));

#if ((BEEP_WHEN_LOCK == 0) && (SHOW_LEDS == 0))
 #define LOCK(x) LOCK_PSO(x)
#endif

#if ((BEEP_WHEN_LOCK != 0) && (SHOW_LEDS == 0))
 #define LOCK(x) beep(LOCK_BEEP); LOCK_PSO(x)
#endif

#if ((BEEP_WHEN_LOCK == 0) && (SHOW_LEDS != 0))
 #define LOCK(x) LOCK_PSO(x); LED15(x)
#endif

#if ((BEEP_WHEN_LOCK != 0) && (SHOW_LEDS != 0))
 #define LOCK(x) beep(LOCK_BEEP); LOCK_PSO(x); LED15(x)
#endif

//+Датчик двери
#define DC1_PORT GPIOA
#define DC1_PIN GPIO_PIN_4
#define DC1_IN (HAL_GPIO_ReadPin(DC1_PORT,DC1_PIN))
#define SAFE_DOOR DC1_IN

//+Датчик положения сервисной зоны
#define DC2_PORT GPIOA
#define DC2_PIN GPIO_PIN_3
#define DC2_IN (HAL_GPIO_ReadPin(DC2_PORT,DC2_PIN))
#define SERVICE_DOOR DC2_IN

//+Датчик мешка
#define DC3_PORT GPIOA
#define DC3_PIN GPIO_PIN_2
#define DC3_IN (HAL_GPIO_ReadPin(DC3_PORT,DC3_PIN))
#define MONEY_BAG DC3_IN

//+Датчик ригеля
#define DC4_PORT GPIOC
#define DC4_PIN GPIO_PIN_3
#define DC4_IN (HAL_GPIO_ReadPin(DC4_PORT,DC4_PIN))
#define LOCK_RIGEL DC4_IN
#define INVERS_LOCK_RIGEL 0          /* ==0 - закрытый ригель соответствует 0 */
                                     /* ==1 - закрытый ригель соответствует 1 */
//+Датчик положения валидатора
#define DC5_PORT GPIOC
#define DC5_PIN GPIO_PIN_2
#define DC5_IN (HAL_GPIO_ReadPin(DC5_PORT,DC5_PIN))
#define VALIDATOR_UNIT DC5_IN

//+Крышка сервисной зоны
#define DC6_PORT GPIOC
#define DC6_PIN GPIO_PIN_1
#define DC6_IN (HAL_GPIO_ReadPin(DC6_PORT,DC6_PIN))
#define SERVICE_COVER DC6_IN

//Датчик включения/выключения компьютера
//== 0 - компьютер выключен
//!= 0 - компьютер включен
#define CHECK_COMPORT_PORT GPIOA
#define CHECK_COMPORT_PIN GPIO_PIN_5
#define CHECK_COMPORT (HAL_GPIO_ReadPin(CHECK_COMPORT_PORT,CHECK_COMPORT_PIN))

//Кнопка включения монитора
#define MONITOR_BUTTON_PORT GPIOF
#define MONITOR_BUTTON_PIN GPIO_PIN_3
#define MONITOR_BUT(x) ((x)? (HAL_GPIO_WritePin(MONITOR_BUTTON_PORT,MONITOR_BUTTON_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(MONITOR_BUTTON_PORT,MONITOR_BUTTON_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define MONITOR_BUTTON(x) MONITOR_BUT(x)
#else
 #define MONITOR_BUTTON(x) MONITOR_BUT(x); LED1(x)
#endif

#define BUTTON1_PORT GPIOF
#define BUTTON1_PIN GPIO_PIN_12
#define BUTTON1 (HAL_GPIO_ReadPin(BUTTON1_PORT,BUTTON1_PIN))

#define BUTTON2_PORT GPIOF
#define BUTTON2_PIN GPIO_PIN_11
#define BUTTON2 (HAL_GPIO_ReadPin(BUTTON2_PORT,BUTTON2_PIN))

#define LED8_PORT GPIOF
#define LED8_PIN GPIO_PIN_13
#define LED8(x) ((x)? (HAL_GPIO_WritePin(LED8_PORT,LED8_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED8_PORT,LED8_PIN,GPIO_PIN_RESET)));

#define LED7_PORT GPIOF
#define LED7_PIN GPIO_PIN_14
#define LED7(x) ((x)? (HAL_GPIO_WritePin(LED7_PORT,LED7_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED7_PORT,LED7_PIN,GPIO_PIN_RESET)));

#define LED6_PORT GPIOF
#define LED6_PIN GPIO_PIN_15
#define LED6(x) ((x)? (HAL_GPIO_WritePin(LED6_PORT,LED6_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED6_PORT,LED6_PIN,GPIO_PIN_RESET)));

#define LED5_PORT GPIOG
#define LED5_PIN GPIO_PIN_0
#define LED5(x) ((x)? (HAL_GPIO_WritePin(LED5_PORT,LED5_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED5_PORT,LED5_PIN,GPIO_PIN_RESET)));

#define LED4_PORT GPIOG
#define LED4_PIN GPIO_PIN_1
#define LED4(x) ((x)? (HAL_GPIO_WritePin(LED4_PORT,LED4_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED4_PORT,LED4_PIN,GPIO_PIN_RESET)));

#define LED3_PORT GPIOE
#define LED3_PIN GPIO_PIN_7
#define LED3(x) ((x)? (HAL_GPIO_WritePin(LED3_PORT,LED3_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED3_PORT,LED3_PIN,GPIO_PIN_RESET)));

#define LED2_PORT GPIOE
#define LED2_PIN GPIO_PIN_8
#define LED2(x) ((x)? (HAL_GPIO_WritePin(LED2_PORT,LED2_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED2_PORT,LED2_PIN,GPIO_PIN_RESET)));

#define LED1_PORT GPIOE
#define LED1_PIN GPIO_PIN_9
#define LED1(x) ((x)? (HAL_GPIO_WritePin(LED1_PORT,LED1_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED1_PORT,LED1_PIN,GPIO_PIN_RESET)));

#define LED9_PORT GPIOE
#define LED9_PIN GPIO_PIN_10
#define LED9(x) ((x)? (HAL_GPIO_WritePin(LED9_PORT,LED9_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED9_PORT,LED9_PIN,GPIO_PIN_RESET)));

#define LED10_PORT GPIOE
#define LED10_PIN GPIO_PIN_11
#define LED10(x) ((x)? (HAL_GPIO_WritePin(LED10_PORT,LED10_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED10_PORT,LED10_PIN,GPIO_PIN_RESET)));

#define LED11_PORT GPIOE
#define LED11_PIN GPIO_PIN_12
#define LED11(x) ((x)? (HAL_GPIO_WritePin(LED11_PORT,LED11_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED11_PORT,LED11_PIN,GPIO_PIN_RESET)));

#define LED12_PORT GPIOE
#define LED12_PIN GPIO_PIN_13
#define LED12(x) ((x)? (HAL_GPIO_WritePin(LED12_PORT,LED12_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED12_PORT,LED12_PIN,GPIO_PIN_RESET)));

#define LED13_PORT GPIOE
#define LED13_PIN GPIO_PIN_14
#define LED13(x) ((x)? (HAL_GPIO_WritePin(LED13_PORT,LED13_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED13_PORT,LED13_PIN,GPIO_PIN_RESET)));

#define LED14_PORT GPIOE
#define LED14_PIN GPIO_PIN_15
#define LED14(x) ((x)? (HAL_GPIO_WritePin(LED14_PORT,LED14_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED14_PORT,LED14_PIN,GPIO_PIN_RESET)));

#define LED15_PORT GPIOB
#define LED15_PIN GPIO_PIN_10
#define LED15(x) ((x)? (HAL_GPIO_WritePin(LED15_PORT,LED15_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED15_PORT,LED15_PIN,GPIO_PIN_RESET)));

#define LED16_PORT GPIOB
#define LED16_PIN GPIO_PIN_11
#define LED16(x) ((x)? (HAL_GPIO_WritePin(LED16_PORT,LED16_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED16_PORT,LED16_PIN,GPIO_PIN_RESET)));

#define POWER_LED_PORT GPIOG
#define POWER_LED_PIN GPIO_PIN_13
#define POWER_LED(x) ((x)? (HAL_GPIO_WritePin(POWER_LED_PORT,POWER_LED_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(POWER_LED_PORT,POWER_LED_PIN,GPIO_PIN_RESET)));

#define SDIO_PSO_PORT GPIOD
#define SDIO_PSO_PIN GPIO_PIN_0
#define SDIO_PSO(x) ((x)? (HAL_GPIO_WritePin(SDIO_PSO_PORT,SDIO_PSO_PIN,GPIO_PIN_RESET)) : (HAL_GPIO_WritePin(SDIO_PSO_PORT,SDIO_PSO_PIN,GPIO_PIN_SET)));
#define SDIO_POWER_OFF    HAL_GPIO_WritePin(SDIO_PSO_PORT, SDIO_PSO_PIN, GPIO_PIN_SET);
#define SDIO_POWER_ON     HAL_GPIO_WritePin(SDIO_PSO_PORT, SDIO_PSO_PIN, GPIO_PIN_RESET);

#define SDIO_OC_PORT GPIOD
#define SDIO_OC_PIN GPIO_PIN_1
#define SDIO_OC (HAL_GPIO_ReadPin(SDIO_OC_PORT,SDIO_OC_PIN))

#define USB_POWER_PORT GPIOC
#define USB_POWER_PIN GPIO_PIN_6
#define USB_POWER(x) ((x)?(HAL_GPIO_WritePin(USB_POWER_PORT,USB_POWER_PIN,GPIO_PIN_RESET)) : HAL_GPIO_WritePin(USB_POWER_PORT,USB_POWER_PIN,GPIO_PIN_SET));

#define LED_ERROR_PORT GPIOB
#define LED_ERROR_PIN GPIO_PIN_3
#define LED_ERROR(x) ((x)?(HAL_GPIO_WritePin(LED_ERROR_PORT,LED_ERROR_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED_ERROR_PORT,LED_ERROR_PIN,GPIO_PIN_RESET)));
#define LED_CHARGE(x) LED_ERROR(x)

#define LED_OK_PORT GPIOB
#define LED_OK_PIN GPIO_PIN_4
#define LED_OK(x) ((x)?(HAL_GPIO_WritePin(LED_OK_PORT,LED_OK_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED_OK_PORT,LED_OK_PIN,GPIO_PIN_RESET)));
#define LED_BAT(x) LED_OK(x)

#define LED_HOPPER_PORT GPIOB
#define LED_HOPPER_PIN GPIO_PIN_8
#define LED_HOPPER(x) ((x)?(HAL_GPIO_WritePin(LED_HOPPER_PORT,LED_HOPPER_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED_HOPPER_PORT,LED_HOPPER_PIN,GPIO_PIN_RESET)));

#define LED_PRINTER_PORT GPIOB
#define LED_PRINTER_PIN GPIO_PIN_9
#define LED_PRINTER(x) ((x)?(HAL_GPIO_WritePin(LED_PRINTER_PORT,LED_PRINTER_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(LED_PRINTER_PORT,LED_PRINTER_PIN,GPIO_PIN_RESET)));

#define RESERVE_POWER_PORT GPIOE
#define RESERVE_POWER_PIN GPIO_PIN_0
#define RES_POWER(x) ((x)?(HAL_GPIO_WritePin(RESERVE_POWER_PORT,RESERVE_POWER_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(RESERVE_POWER_PORT,RESERVE_POWER_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define RESERVE_POWER(x) RES_POWER(x)
#else
 #define RESERVE_POWER(x) RES_POWER(x); LED16(x)
#endif

#define I_O2_PORT GPIOC
#define I_O2_PIN GPIO_PIN_14
#define I_O2 (HAL_GPIO_ReadPin(I_O2_PORT,I_O2_PIN))

#define I_O1_PORT GPIOC
#define I_O1_PIN GPIO_PIN_15
#define I_O1 (HAL_GPIO_ReadPin(I_O1_PORT,I_O1_PIN))

#define VALIDATOR_ON_PORT GPIOF
#define VALIDATOR_ON_PIN GPIO_PIN_1
#define VALIDAT_ON(x) ((x)?(HAL_GPIO_WritePin(VALIDATOR_ON_PORT,VALIDATOR_ON_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(VALIDATOR_ON_PORT,VALIDATOR_ON_PIN,GPIO_PIN_RESET)));
#if SHOW_LEDS == 0
 #define VALIDATOR_ON(x) VALIDAT_ON(x)
#else
 #define VALIDATOR_ON(x) VALIDAT_ON(x); LED12(x)
#endif

#define STATUS_LED_PORT GPIOF
#define STATUS_LED_PIN GPIO_PIN_2
#define STATUS_LED(x) ((x)?(HAL_GPIO_WritePin(STATUS_LED_PORT,STATUS_LED_PIN,GPIO_PIN_SET)) : (HAL_GPIO_WritePin(STATUS_LED_PORT,STATUS_LED_PIN,GPIO_PIN_RESET)));

#define ADM40100 BUTTON2 /* ADM40100 == 0 ADM40, ADM40100 != 0 ADM100 */

#define ALL_LED_OFF LED1(0);LED2(0);LED3(0);LED4(0);LED5(0);LED6(0);LED7(0);LED8(0);LED9(0);LED10(0);LED11(0);LED12(0);LED13(0);LED14(0);LED15(0);LED16(0);
#define ALL_POWER_OFF PRINTER_POWER(0); /*PER_LED(0);*/ /*RFID_READER(0);*/ COMPUTER_POWER(0); VALIDATOR(0); MON_POWER(0); CARD_READER_POWER(0);
